aalias() {
        aliases_file="$HOME/.config/zsh/aliases"
        echo "Enter a name for the alias: "
        read varalias
        echo "What would you like ${varalias} to do?"
        read varcommand
        echo "OK. Saving ${varalias} to ${aliases_file}"
        echo "alias ${varalias}='${varcommand}'" >> "$aliases_file"
}

wgetdl() {
        while read -r line; do
                wget "$line"
        done < "$1"
}

docker-mkvlan() {
        if [ -z "$1" ]; then
                echo "Usage: docker-mkvlan <docker macvlan name>"
                echo "Example: docker-mkvlan macvlan1"
                return 1
        fi
        sudo docker network create -d macvlan \
        --subnet=10.0.0.0/24 \
        --gateway=10.0.0.1 \
        -o parent=enp39s0 \
        $1;
}

mkvlan() {
        if [ -z "$1" ]; then
                echo "Usage: mkvlan <vlan name> <unique ip/24>"
                echo "Example: docker-mkvlan 10.0.0.50/24"
                return 1
        fi
        sudo ip link add "$1" link enp39s0 type macvlan mode bridge;
        sudo ip addr add "$2" dev "$1";
        sudo ip link set "$1" up;
        ## if no default route exists, add route to default gateway
        # sudo ip route add 10.0.0.0/24 dev $2;
}

source /Volumes/meouch/home/${USER}/private.env

ishfs() {
        for i in "$@"; do
            mount | rg $i > /dev/null 2>&1; echo $?
        done
}

mountr() {
    if [ -z "$1" ]; then
        locals=($l_home $l_sdd1 $l_sdc1)
        for item in "${locals[@]}"; do
            if [[ $(ishfs $item) -eq 1 ]]; then
                echo "Mounting to ${l_vol}$item"
                sshfs $lab3:$item ${l_vol}$item
            else
                echo "${l_vol}$item is already mounted"
            fi
        done
        mount | rg -e ${l_vol}$l_home -e ${l_vol}$l_sdd1 -e ${l_vol}$l_sdc1
    else
        echo "Invalid argument."
    fi
}

umountr() {
    if [ -z "$1" ]; then
        umount_array=($l_home $l_sdd1 $l_sdc1)
        sudo killall Finder
        open /System/Library/CoreServices/Finder.app
        for item in "${umount_array[@]}"; do
            if [[ $(ishfs $item) -eq 0 ]]; then
                echo "Unmounting ${l_vol}$item"
                umount ${l_vol}$item
            else
                echo "${l_vol}$item is not mounted"
            fi
        done
    else
        echo "Invalid argument."
    fi
}

#alias sshfsrg="$(mount | $(rg -e ${l_home_mount} -e ${l_sdd1} -e ${l_sdc1}))"

alias ls="exa --all --git --header --long --sort=.name --icons --octal-permissions --no-permissions --group-directories-first --tree -L=1"
alias lss="exa --all --git --header --long --sort=mod --icons --octal-permissions --no-permissions --group-directories-first --tree -L=2"
alias lsss="exa --all --git --header --long --sort=mod --icons --octal-permissions --no-permissions --group-directories-first --tree -L=3"
alias lssss="exa --all --git --header --long --sort=mod --icons --octal-permissions --no-permissions --group-directories-first --tree -L=4"
alias dots="exa --long --octal-permissions --no-permissions --no-filesize --inode --time-style iso --git --header --sort=name --all -d --icons -I .*"
alias lsd="ls --only-dirs"

alias showfonts="fc-list : family spacing outline scalable | grep -e spacing=100 -e spacing=90 | grep -e outline=True | grep -e scalable=True"
alias zshconfig="nvim $ZDOTDIR/.zshrc"
alias ohmyzsh="nvim $ZDOTDIR/.oh-my-zsh"
alias ale="code $HOME/.config/zsh/aliases"
alias ales="cat $HOME/.config/zsh/aliases"
alias quit="exit"

alias themes="kitty +kitten themes"
alias rlc="omz reload"
alias wanip="curl -4 icanhazip.com"
